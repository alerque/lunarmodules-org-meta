name: Upload to LuaRocks

on:
  workflow_call:
    inputs:
      rockspecs:
        required: true
        type: string
    secrets:
      apikey:
        required: true

jobs:
  upload:
    name: Build rocks and upload to LuaRocks
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        rockspec: ${{ fromJSON(inputs.rockspecs) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup ‘lua’
        uses: leafo/gh-actions-lua@v11
      - name: Setup ‘luarocks’
        uses: leafo/gh-actions-luarocks@v5
      - name: Setup dependencies
        run: |
          luarocks install dkjson
      - name: Parse semver and check for matching tag of touched rockspec
        id: parsetag
        run: |
          semver=$(rev <<< "${{ matrix.rockspec }}" | cut -d- -f2 | rev)
          echo "::set-output name=semver::$semver"
          tag=$(git tag | grep -Ex "v?${semver//\\./\\\\.}" ||:)
          echo "::set-output name=tag::$tag"
      - name: Upload dev rockspec to luarocks
        # Upload dev rockspecs any time they are touched
        if: ${{ !startsWith(matrix.rockspec, 'rockspecs/') }}
        run: |
          args="--temp-key ${{ secrets.apikey }} --force --skip-pack"
          luarocks upload $args -- ${{ matrix.rockspec }}
      - name: Upload release rockspec to luarocks
        # Only upload stable rockspecs if the file was touched AND a matching tag exists
        if: ${{ startsWith(matrix.rockspec, 'rockspecs/') && steps.parsetag.outputs.tag }}
        run: |
          args="--temp-key ${{ secrets.apikey }}"
          luarocks upload $args -- ${{ matrix.rockspec }}
